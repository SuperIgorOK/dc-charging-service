services:
  backend:
    build: .
    container_name: dc_charging_service
    command: >
      sh -c "alembic upgrade head &&
             uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      mqtt:
        condition: service_started
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  ocpp_ws_server:
    build:
      context: .
    command: python apps/ocpp/server.py
    depends_on:
      - redis
      - db
      - mqtt
    environment:
      - PYTHONPATH=/app
      - WEBSOCKET_HOST=${WEBSOCKET_HOST}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}

    ports:
      - "9000:9000"

  db:
    image: postgres:15
    container_name: dc_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  redis:
    image: redis/redis-stack-server:latest
    container_name: dc_redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dc_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  mqtt:
    image: eclipse-mosquitto:2
    container_name: dc_mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:18083/status || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

#  worker:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: dc_worker
#    depends_on:
#      - app
#      - rabbitmq
#    env_file:
#      - .env
#    command: >
#      sh -c "celery -A celery_app worker --loglevel=info"
#    volumes:
#      - .:/app

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  postgres_data:
